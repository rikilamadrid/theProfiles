[{"/Users/ricardolamadrid/Desktop/react-search-challenge/src/index.js":"1","/Users/ricardolamadrid/Desktop/react-search-challenge/src/App.js":"2","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/MinimalButton.jsx":"3","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/SearchCard.jsx":"4","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/Header.jsx":"5","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/Toggle.jsx":"6","/Users/ricardolamadrid/Desktop/react-search-challenge/src/pages/ProfilePage.jsx":"7","/Users/ricardolamadrid/Desktop/react-search-challenge/src/pages/SearchPage.jsx":"8","/Users/ricardolamadrid/Desktop/react-search-challenge/src/context/ProfilesContextProvider.jsx":"9","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/Button.jsx":"10","/Users/ricardolamadrid/Desktop/react-search-challenge/src/skeletons/SkeletonProfile.jsx":"11","/Users/ricardolamadrid/Desktop/react-search-challenge/src/skeletons/SkeletonElement.jsx":"12"},{"size":179,"mtime":1604356629000,"results":"13","hashOfConfig":"14"},{"size":609,"mtime":1610315407965,"results":"15","hashOfConfig":"14"},{"size":436,"mtime":1610237688481,"results":"16","hashOfConfig":"14"},{"size":2231,"mtime":1610308802744,"results":"17","hashOfConfig":"14"},{"size":360,"mtime":1610237170559,"results":"18","hashOfConfig":"14"},{"size":1675,"mtime":1610242415253,"results":"19","hashOfConfig":"14"},{"size":1642,"mtime":1610321100146,"results":"20","hashOfConfig":"14"},{"size":3647,"mtime":1610322689937,"results":"21","hashOfConfig":"14"},{"size":1788,"mtime":1610317682119,"results":"22","hashOfConfig":"14"},{"size":854,"mtime":1610308773936,"results":"23","hashOfConfig":"14"},{"size":1534,"mtime":1610320815494,"results":"24","hashOfConfig":"14"},{"size":210,"mtime":1610317953101,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"e6apsi",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ricardolamadrid/Desktop/react-search-challenge/src/index.js",[],["58","59"],"/Users/ricardolamadrid/Desktop/react-search-challenge/src/App.js",[],"/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/MinimalButton.jsx",["60"],"import React from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst MinimalButton = ({ children, onClick, style, ...props }) => {\n  const stButton = css`\n    background: transparent;\n    border: 0;\n    cursor: pointer;\n    margin: 8px;\n  `;\n  return (\n    <button {...props} onClick={onClick} css={[stButton, style]}>\n      {children}\n    </button>\n  );\n};\n\nexport default MinimalButton;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/SearchCard.jsx",["61"],"import React from 'react';\n\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst SearchCard = ({\n  photoUrl = '',\n  handle = '',\n  location = '',\n  age = 99,\n  photoCount = 0,\n  id = '',\n  onClick,\n}) => {\n  const stCardContainer = css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n\n  const stCard = css`\n    border: 1px solid lightgray;\n    border-radius: 8px;\n    box-shadow: 0 3px 6px lightgray, 0 3px 6px;\n    overflow: hidden;\n    &:hover {\n      cursor: pointer;\n      filter: brightness(80%) saturate(80%);\n    }\n\n    &:active {\n      filter: brightness(110%) saturate(110%);\n    }\n    padding: 0;\n    outline: none;\n  `;\n\n  const stAvatar = css`\n    position: relative;\n    width: 200px;\n    height: 200px;\n  `;\n\n  const stDashBoardContainer = css`\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    border-radius: inherit;\n    overflow: hidden;\n  `;\n\n  const stDashBoard = css`\n    margin: 8px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  `;\n\n  const stDetailsContainer = css`\n    color: white;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n  `;\n\n  const stHandle = css`\n    font-size: 16px;\n    display: flex;\n    align-items: center;\n  `;\n\n  const stAgeAndLocationContainer = css`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n\n    > p {\n      margin: 0 0.5rem 0.5rem 0;\n    }\n  `;\n\n  const handleCardClick = (id) => {\n    onClick(id);\n  };\n\n  return (\n    <div css={stCardContainer}>\n      <button css={stCard} onClick={() => handleCardClick(id)}>\n        <div css={stAvatar}>\n          <img src={photoUrl} alt=\"potential date\"></img>\n          <div css={stDashBoardContainer}>\n            <div css={stDashBoard}>\n              <div css={stDetailsContainer}>\n                <h6 css={stHandle}>{handle}</h6>\n                <div css={stAgeAndLocationContainer}>\n                  <p>{location ? `${age} â€¢ ${location}` : age}</p>\n                  {photoCount > 1 && <p>{photoCount}</p>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default SearchCard;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/Header.jsx",["62"],"import React from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst Header = () => {\n  const stHeader = css`\n    border-bottom: 1px solid #efefef;\n    padding: 16px;\n  `;\n\n  return (\n    <header css={stHeader}>\n      <img src=\"./logo.svg\" alt=\"match\" width=\"110\" />\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/Toggle.jsx",["63"],"import React, { useState, useEffect } from 'react';\n\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst Toggle = ({ label, onChange, checked }) => {\n  const [checkedStatus, setCheckedStatus] = useState(checked);\n\n  useEffect(() => {\n    setCheckedStatus(checked);\n  }, [checked]);\n\n  const changeHandle = (ev) => {\n    ev.stopPropagation();\n    setCheckedStatus(!checkedStatus);\n\n    if (onChange) {\n      onChange(ev, !checkedStatus);\n    }\n  };\n\n  const stLabel = css`\n    display: flex;\n    align-items: center;\n    width: auto;\n    margin-right: 0.5rem;\n  `;\n\n  const stToggle = css`\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n    height: 24px;\n    width: '36px';\n\n    input {\n      display: none;\n    }\n\n    .toggle {\n      position: relative;\n      display: inline-block;\n      width: 36px;\n      height: 20px;\n      background-color: #ededed;\n      border-radius: 20px;\n      transition: all 0.1s ease-out;\n\n      &:after {\n        content: '';\n        position: absolute;\n        width: 16px;\n        height: 16px;\n        border-radius: 50%;\n        background-color: white;\n        top: 2px;\n        left: 2px;\n        transition: all 0.1s ease-out;\n      }\n    }\n\n    input:checked ~ .toggle::after {\n      left: 18px;\n    }\n\n    input:checked ~ .toggle {\n      background-color: #1927f0;\n      border-color: #163574;\n    }\n  `;\n\n  return (\n    <label css={[stToggle, stLabel]}>\n      <input type=\"checkbox\" checked={!!checkedStatus} onChange={changeHandle} />\n      {label && <span css={stLabel}>{label}</span>}\n      <span className=\"toggle\"></span>\n    </label>\n  );\n};\n\nexport default Toggle;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/pages/ProfilePage.jsx",["64","65","66"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { ProfileContext } from '../context/ProfilesContextProvider';\nimport Button from '../components/Button';\nimport SkeletonProfile from '../skeletons/SkeletonProfile';\n\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst ProfilePage = ({ match }) => {\n  const [loading, setLoading] = useState(false);\n  const { selectedProfile, dispatch, fetchProfile } = useContext(ProfileContext);\n  let history = useHistory();\n\n  const stPageContainer = css`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin: 1rem;\n  `;\n\n  const stImage = css`\n    border-radius: 8px;\n    margin: 1rem;\n  `;\n\n  const stDetailsContainer = css`\n    text-align: center;\n  `;\n\n  const goBackHandler = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    const fetchingProfile = async () => {\n      await fetchProfile(match.params.id);\n    };\n\n    if (history.action === 'POP' && !selectedProfile) {\n      setLoading(true);\n      fetchingProfile();\n      setLoading(false);\n    }\n  }, [selectedProfile, history]);\n\n  return (\n    <main css={stPageContainer}>\n      <Button label=\"back\" onClick={goBackHandler} />\n      {loading ? (\n        <SkeletonProfile />\n      ) : (\n        <>\n          <img css={stImage} src={selectedProfile?.photoUrl} alt=\"selected date\" />\n          <div css={stDetailsContainer}>\n            <h1>{selectedProfile?.handle}</h1>\n            <p>{selectedProfile?.age}</p>\n          </div>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default ProfilePage;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/pages/SearchPage.jsx",["67","68","69"],"/Users/ricardolamadrid/Desktop/react-search-challenge/src/context/ProfilesContextProvider.jsx",[],"/Users/ricardolamadrid/Desktop/react-search-challenge/src/components/Button.jsx",["70"],"import React from 'react';\n/** @jsxImportSource @emotion/react */\nimport { css, jsx } from '@emotion/react';\n\nconst Button = ({ label, onClick }) => {\n  const stBackButton = css`\n    border-radius: 8px;\n    border: solid;\n    cursor: pointer;\n    display: inline-block;\n    padding: 9px 12px 8px 12px;\n    text-transform: uppercase;\n    margin: 5px;\n    outline: 0;\n\n    background-color: #1927f0;\n    border-color: #1927f0;\n    border-width: 1px;\n    font-size: 12px;\n    color: white;\n    font-weight: bold;\n\n    &:hover {\n      filter: brightness(80%) saturate(80%);\n    }\n\n    &:active {\n      filter: brightness(110%) saturate(110%);\n    }\n  `;\n  const clickHandle = (ev) => {\n    ev.stopPropagation();\n    onClick();\n  };\n\n  return (\n    <button css={stBackButton} onClick={clickHandle}>\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/skeletons/SkeletonProfile.jsx",["71","72"],"import React from 'react';\n\n/** @jsxImportSource @emotion/react */\nimport { css, jsx, keyframes } from '@emotion/react';\n\nconst SkeletonProfile = () => {\n  const glow = keyframes`\n    from, 0%, 100% to {\n      opacity: 1;\n    };\n\n    50% {\n      opacity: 0.5;\n    };\n  `;\n\n  const stThumbnail = css`\n    animation: ${glow} 2s infinite;\n    background-color: #c4c4c4;\n    width: 100px;\n    height: 100px;\n  `;\n\n  const stSkeletonWrapper = css`\n    background-color: #f2f2f2;\n    border-radius: 4px;\n    margin: 20px auto;\n    padding: 10px 15px;\n    position: relative;\n    overflow: hidden;\n  `;\n\n  const stSkeletonProfile = css`\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 30px;\n    align-items: center;\n  `;\n\n  const stSkeletonAvatar = css`\n    background-color: #ddd;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n  `;\n\n  const stSkeletonTitle = css`\n    animation: ${glow} 2s infinite;\n    background-color: #ddd;\n    width: 50%;\n    height: 20px;\n    margin-bottom: 15px;\n  `;\n\n  const stSkeletonText = css`\n    animation: ${glow} 2s infinite;\n    background-color: #ddd;\n    width: 100%;\n    height: 12px;\n  `;\n\n  return (\n    <div css={stSkeletonWrapper}>\n      <div css={stSkeletonProfile}>\n        <div>\n          <div css={[stSkeletonAvatar]}></div>\n        </div>\n        <div>\n          <div css={stSkeletonTitle}></div>\n          <div css={stSkeletonText}></div>\n          <div css={stSkeletonText}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SkeletonProfile;\n","/Users/ricardolamadrid/Desktop/react-search-challenge/src/skeletons/SkeletonElement.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":15,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":4,"column":15,"nodeType":"79","messageId":"80","endLine":4,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":3,"column":15,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":4,"column":15,"nodeType":"79","messageId":"80","endLine":4,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":9,"column":15,"nodeType":"79","messageId":"80","endLine":9,"endColumn":18},{"ruleId":"77","severity":1,"message":"81","line":13,"column":28,"nodeType":"79","messageId":"80","endLine":13,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":46,"column":6,"nodeType":"84","endLine":46,"endColumn":32,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"78","line":6,"column":15,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":75,"column":6,"nodeType":"84","endLine":75,"endColumn":15,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":79,"column":6,"nodeType":"84","endLine":79,"endColumn":21,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":15,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":4,"column":15,"nodeType":"79","messageId":"80","endLine":4,"endColumn":18},{"ruleId":"77","severity":1,"message":"90","line":17,"column":9,"nodeType":"79","messageId":"80","endLine":17,"endColumn":20},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchProfile' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'fetchProfiles'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'setFetchInterval'. Either include it or remove the dependency array.",["95"],"'stThumbnail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [selectedProfile, history, fetchProfile, match.params.id]",{"range":"102","text":"103"},"Update the dependencies array to be: [fetchProfiles, history]",{"range":"104","text":"105"},"Update the dependencies array to be: [enableCounter, setFetchInterval]",{"range":"106","text":"107"},[1143,1169],"[selectedProfile, history, fetchProfile, match.params.id]",[1926,1935],"[fetchProfiles, history]",[1988,2003],"[enableCounter, setFetchInterval]"]